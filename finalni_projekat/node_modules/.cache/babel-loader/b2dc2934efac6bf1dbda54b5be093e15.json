{"ast":null,"code":"import _slicedToArray from \"/home/lokid/Desktop/finalni_projekat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lokid/Desktop/finalni_projekat/src/components/chat.jsx\";\nimport React from 'react';\nimport Message from './message';\nimport { getAllTopicMessages, putUserMessages } from '../utilities/forum-services';\nimport { useState } from 'react';\nimport { useEffect } from 'react'; // ruta /topic-list/{topic_id}\n\nconst Chat = ({\n  match,\n  history,\n  logIn\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        message = _useState2[0],\n        setMessage = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        messages = _useState4[0],\n        setMessages = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newMsg = _useState6[0],\n        setNewMsg = _useState6[1];\n\n  let topicID = match.params.topic_id;\n  let user_id; // let username; \n  // let timestamp;\n  // let topic_id;\n\n  if (logIn) {\n    user_id = logIn.user_id;\n  }\n\n  useEffect(() => {\n    getAllTopicMessages(topicID).then(data => {\n      // if(data.success) {\n      console.log(data.messages + 'dohvaćene poruke');\n      setMessages(data.messages); // username = data.messages.username;\n      // timestamp = data.messages.timestamp;\n      // topic_id = data.messages.topic_id;\n      // }\n    });\n  }, [topicID]); //topicID, newMsg\n  // username = messages.username\n  // let topic_id = topicID\n  // function handleSubmit(username, topic_id, message){\n  //     //dodaj novu poruku i stavi je u setNewMsg\n  //     putUserMessages({username, topic_id, message})\n  //     .then (data => {\n  //         if (data.success) console.log(data.message)\n  //     })\n  // }\n\n  console.log(messages);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), messages.map(mes => {\n    return React.createElement(Message, {\n      history: history,\n      key: mes.message_id,\n      user_id: user_id,\n      username: mes.username,\n      message: mes.message.toSting(),\n      timestamp: mes.timestamp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Va\\u0161a poruka\",\n    required: true,\n    onInput: e => {\n      setNewMsg(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Po\\u0161alji\",\n    onClick: e => {\n      e.preventDefault();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \" \"));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/lokid/Desktop/finalni_projekat/src/components/chat.jsx"],"names":["React","Message","getAllTopicMessages","putUserMessages","useState","useEffect","Chat","match","history","logIn","message","setMessage","messages","setMessages","newMsg","setNewMsg","topicID","params","topic_id","user_id","then","data","console","log","map","mes","message_id","username","toSting","timestamp","e","target","value","preventDefault"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,QAAqD,6BAArD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,OAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAAA,oBACTL,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAChCM,OADgC;AAAA,QACvBC,UADuB;;AAAA,qBAEPP,QAAQ,CAAC,EAAD,CAFD;AAAA;AAAA,QAEhCQ,QAFgC;AAAA,QAEtBC,WAFsB;;AAAA,qBAGXT,QAAQ,CAAC,EAAD,CAHG;AAAA;AAAA,QAGhCU,MAHgC;AAAA,QAGxBC,SAHwB;;AAIvC,MAAIC,OAAO,GAAGT,KAAK,CAACU,MAAN,CAAaC,QAA3B;AACA,MAAIC,OAAJ,CALuC,CAMvC;AACA;AACA;;AAEA,MAAIV,KAAJ,EAAW;AACPU,IAAAA,OAAO,GAAGV,KAAK,CAACU,OAAhB;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AAChBH,IAAAA,mBAAmB,CAACc,OAAD,CAAnB,CACCI,IADD,CACMC,IAAI,IAAI;AACV;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACT,QAAL,GAAgB,kBAA5B;AAEAC,MAAAA,WAAW,CAACQ,IAAI,CAACT,QAAN,CAAX,CAJM,CAKN;AACA;AACA;AAGJ;AACH,KAZD;AAaH,GAdY,EAcV,CAACI,OAAD,CAdU,CAAT,CAduC,CA4B7B;AAEd;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AAEI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKA,QAAQ,CAACY,GAAT,CAAaC,GAAG,IAAI;AAAE,WAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEjB,OAAlB;AAA2B,MAAA,GAAG,EAAGiB,GAAG,CAACC,UAArC;AAAiD,MAAA,OAAO,EAAEP,OAA1D;AAAmE,MAAA,QAAQ,EAAEM,GAAG,CAACE,QAAjF;AAA2F,MAAA,OAAO,EAAEF,GAAG,CAACf,OAAJ,CAAYkB,OAAZ,EAApG;AAA2H,MAAA,SAAS,EAAEH,GAAG,CAACI,SAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAA8J,GAApL,CAHL,CADJ,EAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,kBAA/B;AAA6C,IAAA,QAAQ,MAArD;AAAsD,IAAA,OAAO,EAAEC,CAAC,IAAI;AAACf,MAAAA,SAAS,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA0B,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,cAA3B;AAAqC,IAAA,OAAO,EAAGF,CAAD,IAAO;AAACA,MAAAA,CAAC,CAACG,cAAF;AAAmB,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,MAPR,CADJ;AAeH,CA3DD;;AA6DA,eAAe3B,IAAf","sourcesContent":["import React from 'react';\nimport Message from './message';\nimport { getAllTopicMessages, putUserMessages } from '../utilities/forum-services';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n// ruta /topic-list/{topic_id}\nconst Chat = ({match, history,  logIn}) => {\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    const [newMsg, setNewMsg] = useState({})\n    let topicID = match.params.topic_id\n    let user_id; \n    // let username; \n    // let timestamp;\n    // let topic_id;\n\n    if (logIn) {\n        user_id = logIn.user_id;\n    }\n\n    useEffect(() => {\n    getAllTopicMessages(topicID)\n    .then(data => {\n        // if(data.success) {\n            console.log(data.messages + 'dohvaćene poruke');\n\n            setMessages(data.messages)\n            // username = data.messages.username;\n            // timestamp = data.messages.timestamp;\n            // topic_id = data.messages.topic_id;\n\n\n        // }\n    })\n}, [topicID]) //topicID, newMsg\n\n// username = messages.username\n// let topic_id = topicID\n\n// function handleSubmit(username, topic_id, message){\n//     //dodaj novu poruku i stavi je u setNewMsg\n//     putUserMessages({username, topic_id, message})\n//     .then (data => {\n//         if (data.success) console.log(data.message)\n//     })\n\n\n// }\nconsole.log(messages)\n\n    return (\n        <div>\n            <div>\n                \n                <label>{}</label>\n                {messages.map(mes => { return <Message history={history} key ={mes.message_id} user_id={user_id} username={mes.username} message={mes.message.toSting()} timestamp={mes.timestamp}/>})}          \n            </div>\n                \n                <div>\n                    <input type=\"text\" placeholder=\"Vaša poruka\" required onInput={e => {setNewMsg(e.target.value)}}/>\n                    <input type=\"submit\" value=\"Pošalji\" onClick={(e) => {e.preventDefault()}}/> {/*newMsg handleSubmit(logIn.username, topicID, newMsg) */}\n                </div>\n\n        </div>\n    )\n}\n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}